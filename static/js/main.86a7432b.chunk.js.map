{"version":3,"sources":["components/Tasks/Task/Task.js","components/Tasks/TaskList/TaskList.js","components/UI/Button/Button.js","components/Tasks/TaskInput/TaskInput.js","App.js","index.js"],"names":["Task","props","className","onClick","onDelete","id","children","TaskList","items","map","task","onDeleteTask","text","Button","type","TaskInput","useState","inputText","setInputText","isInputValid","setIsInputValid","onSubmit","event","preventDefault","trim","length","onAddTask","onChange","target","value","App","tasks","setTasks","content","style","textAlign","taskId","prevTasks","filter","updatedTasks","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"gUAmBeA,EAfF,SAACC,GAQZ,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCGEC,G,MAZE,SAACN,GAChB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAoBL,GAAIK,EAAKL,GAAID,SAAUH,EAAMU,aAAjD,SACGD,EAAKE,MADGF,EAAKL,WCCTQ,G,MARA,SAACZ,GACd,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAU,SAApC,SACGD,EAAMK,aCiCES,G,MAjCG,SAACd,GACjB,MAAkCe,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAiBA,OACE,uBAAMC,SAVkB,SAACC,GACzBA,EAAMC,iBAC0B,IAA5BN,EAAUO,OAAOC,OAIrBxB,EAAMyB,UAAUT,GAHdG,GAAgB,IAOlB,UACE,sBAAKlB,UAAS,uBAAmBiB,EAAyB,GAAX,WAA/C,UACE,yEACA,uBACEL,KAAK,OACLa,SArBuB,SAACL,GAC1BA,EAAMM,OAAOC,MAAML,OAAOC,OAAS,GACrCL,GAAgB,GAClBF,EAAaI,EAAMM,OAAOC,aAqBxB,cAAC,EAAD,CAAQf,KAAK,SAAb,wGCaSgB,G,MAxCH,WACV,MAA0Bd,mBAAS,CACjC,CAAEJ,KAAM,yGAA0BP,GAAI,MACtC,CAAEO,KAAM,yEAAmBP,GAAI,MAC/B,CAAEO,KAAM,yGAA0BP,GAAI,QAHxC,mBAAO0B,EAAP,KAAcC,EAAd,KAqBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,uJAOF,OAJIJ,EAAMN,OAAS,IACjBQ,EAAU,cAAC,EAAD,CAAUzB,MAAOuB,EAAOpB,aAZV,SAACyB,GACzBJ,GAAS,SAACK,GAER,OADqBA,EAAUC,QAAO,SAAC5B,GAAD,OAAUA,EAAKL,KAAO+B,YAc9D,gCACE,yBAAS/B,GAAG,YAAZ,SACE,cAAC,EAAD,CAAWqB,UA1BM,SAACT,GACtBe,GAAS,SAACK,GACR,IAAME,EAAY,YAAOF,GAEzB,OADAE,EAAaC,QAAQ,CAAE5B,KAAMK,EAAWZ,GAAIoC,KAAKC,SAASC,aACnDJ,UAwBP,yBAASlC,GAAG,QAAZ,SAAqB4B,SCpC3BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.86a7432b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Task.css\";\n\nconst Task = (props) => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"task-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\n\nimport Task from \"../Task/Task\";\nimport \"./TaskList.css\";\n\nconst TaskList = (props) => {\n  return (\n    <ul className=\"task-list\">\n      {props.items.map((task) => (\n        <Task key={task.id} id={task.id} onDelete={props.onDeleteTask}>\n          {task.text}\n        </Task>\n      ))}\n    </ul>\n  );\n};\n\nexport default TaskList;\n","import \"./Button.css\";\n\nconst Button = (props) => {\n  return (\n    <button type={props.type} className=\"button\">\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./TaskInput.css\";\n\nconst TaskInput = (props) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setIsInputValid] = useState(true);\n\n  const taskInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0)\n      setIsInputValid(true);\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputText.trim().length === 0) {\n      setIsInputValid(false);\n      return;\n    }\n    props.onAddTask(inputText);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={`form-control ${!isInputValid? 'invalid': ''}`}>\n        <label>Задачи</label>\n        <input\n          type=\"text\"\n          onChange={taskInputChangeHandler}\n        />\n      </div>\n      <Button type=\"submit\">Добавить Задачу</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n","import React, { useState } from \"react\";\n\nimport TaskList from \"./components/Tasks/TaskList/TaskList\";\nimport TaskInput from \"./components/Tasks/TaskInput/TaskInput\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    { text: \"Создание курса - 1 час\", id: \"t1\" },\n    { text: \"Разминка 15 мин\", id: \"t2\" },\n    { text: \"Создание курса - 1 час\", id: \"t3\" },\n  ]);\n\n  const addTaskHandler = (inputText) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks];\n      updatedTasks.unshift({ text: inputText, id: Math.random().toString() });\n      return updatedTasks;\n    });\n  };\n\n  const deleteTaskHandler = (taskId) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((task) => task.id !== taskId);\n      return updatedTasks;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>Задач не найдено! Добавить?</p>\n  );\n\n  if (tasks.length > 0) {\n    content = <TaskList items={tasks} onDeleteTask={deleteTaskHandler} />;\n  }\n\n  return (\n    <div>\n      <section id=\"task-form\">\n        <TaskInput onAddTask={addTaskHandler} />\n      </section>\n      <section id=\"tasks\">{content}</section>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}